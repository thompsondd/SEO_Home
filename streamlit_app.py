# pip freeze > requirements.txt
import time
import streamlit as st
import numpy as np
import altair as alt
import pandas as pd
import webbrowser
from PIL import Image
import database as db
#dotenv == 0.0.5
def check1(us, col, c):
    temp1 = np.array(us[col].split("-")).astype(float)
    temp1 = np.ceil(temp1).astype(int)
    if(len(temp1) > 1):
        if temp1[0] in range(c[0],c[1]+1) and temp1[1] in range(c[0],c[1]+1):
            return True
    else:
        if temp1 in range(c[0],c[1]+1) and temp1 in range(c[0],c[1]+1):
            return True
    
    return False

def check2(us, col, c):
    temp1 = np.array(us[col].split("-")).astype(int)
    if c in range(temp1[0],temp1[1]+1):
        return True
    
    return False

st.set_page_config(
    page_title="Home Ai Search",
    page_icon="üßä",
    layout="centered",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://www.facebook.com/profile.php?id=100008279142274',
        'Report a bug': "https://www.facebook.com/profile.php?id=100008279142274",
        'About': "# if you have something to report dm https://www.facebook.com/profile.php?id=100008279142274"
    }
)


col1, col2, col3 = st.columns((2,4,1))
with col1:
    st.image(Image.open('dark_logo.png'))
with col2:
    st.header(' ')
    st.header('Knowledge Representation')
    st.markdown('Your choice, your comfort')

with st.form("my_form"):
    quan = st.multiselect(
        'Qu·∫≠n',
        ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', 
        'T√¢n B√¨nh', 'B√¨nh T√¢n', 'T√¢n Ph√∫', 'B√¨nh Th·∫°nh', 'G√≤ V·∫•p', 'Ph√∫ Nhu·∫≠n',
        'H√≥c M√¥n', 'B√¨nh Ch√°nh', 'Nh√† B√®', 'C·ªß Chi'))

    submitted = st.form_submit_button("Next")

if not quan and submitted==True:
    st.warning("H√£y ch·ªçn qu·∫≠n!!",icon="‚ö†Ô∏è")

if len(quan)!=0:
    with st.expander('B·ªô l·ªçc'):
        money = st.slider('Gi√° ti·ªÅn (tri·ªáu/m¬≤)',0, 200, (0, 50))
        area = st.slider('Di·ªán t√≠ch m¬≤', 0, 500, (0, 70))
        col1, col2 = st.columns((1,1))
        with col1:
            sleep = st.selectbox('S·ªë ph√≤ng ng·ªß', (1,2,3,4,5))
        with col2:
            vs = st.selectbox('S·ªë ph√≤ng v·ªá sinh', (1,2,3))
        search = st.button("Search")
    if search:
        #pass
        user = db.fetch_all_apartments()    
        dis = []
        for us in user:
            for i in quan:
                if (us['districts'] == i):
                    if(check1(us,'rates',money)):
                        if(check1(us,'areas',area)):
                            if(check2(us,'wc',vs)):
                                if(check2(us,'bedrooms',sleep)):
                                    dis.append(us)

        for q in quan:
            st.header('Qu·∫≠n ' + q)
            if (len(dis)==0):
                st.write("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu ph√π h·ª£p!")
            else:
                for d in dis: 
                    # st.write(d)
                    st.subheader(d['key'])
                    st.info(d['addresses'] + ", ph∆∞·ªùng " + d['wards'] + ", qu·∫≠n " + d['districts'] + ', Tp.HCM', icon="üè¢")
                    col1, col2, col3, col4 = st.columns((1.3,1,1,1.5))
                    with col1:
                        st.info(d['areas'] + ' m¬≤',icon='üõã')
                    with col2:
                        st.success(d['bedrooms'],icon='üõèÔ∏è')
                    with col3:
                        st.warning(d['wc'],icon='üõÅ')
                    with col4:
                        st.error(d['rates'] + " tri·ªáu/m¬≤",icon='üí≤')
                    with st.expander('Nh·ªØng ti·ªán √≠ch xung quanh'):
                        col1, col2, col3, col4 = st.columns((3,1,3,1))
                        with col1:
                            st.markdown('S·ªë tr∆∞·ªùng h·ªçc: ')
                            st.write('- - - - - - - - - - - - - - - - - - ')
                        with col2:
                            a=d['schools']
                            st.write(a)
                        with col3:
                            st.markdown('S·ªë tr·∫°m xe bus: ')
                            st.write('- - - - - - - - - - - - - - - - - - ')
                        with col4:
                            a=d['buses']
                            st.write(a)
                        col1, col2, col3, col4 = st.columns((3,1,3,1))
                        with col1:
                            st.markdown('S·ªë si√™u th·ªã: ')
                            st.write('- - - - - - - - - - - - - - - - - - ')
                        with col2:
                            a=d['markets']
                            st.write(a)
                        with col3:
                            st.markdown('S·ªë tr·∫°m nh√† h√†ng: ')
                            st.write('- - - - - - - - - - - - - - - - - - ')
                        with col4:
                            a=d['restaurants']
                            st.write(a)
                        col1, col2, col3, col4 = st.columns((3,1,3,1))
                        with col1:
                            st.markdown('S·ªë c√¢y ATM: ')
                        with col2:
                            a=d['atm']
                            st.write(a)
                        with col3:
                            st.markdown('S·ªë c∆° s·ªü y t·∫ø: ')
                        with col4:
                            a=d['hospitals']
                            st.write(a) 

url = 'https://youtu.be/'
url_= 'dQw4w9WgXcQ'

if st.button('_do not click_ **this**'):
    webbrowser.open_new_tab(url+url_)
    st.caption('i told ya')



