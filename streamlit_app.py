# pip freeze > requirements.txt
import time
import streamlit as st
import numpy as np
import altair as alt
import pandas as pd
import webbrowser
from PIL import Image
import database as db
import streamlit_nested_layout

def check1(us, col, c):
    temp1 = np.array(us[col].split("-")).astype(float)
    temp1 = np.ceil(temp1).astype(int)
    if(len(temp1) > 1):
        if temp1[0] in range(c[0],c[1]+1) and temp1[1] in range(c[0],c[1]+1):
            return True
    else:
        if temp1 in range(c[0],c[1]+1) and temp1 in range(c[0],c[1]+1):
            return True
    
    return False

def check2(us, col, c):
    temp1 = np.array(us[col].split("-")).astype(int)
    if c in range(temp1[0],temp1[1]+1):
        return True
    
    return False

st.set_page_config(
    page_title="Home Ai Search",
    page_icon="üßä",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://www.facebook.com/profile.php?id=100008279142274',
        'Report a bug': "https://www.facebook.com/profile.php?id=100008279142274",
        'About': "# if you have something to report dm https://www.facebook.com/profile.php?id=100008279142274"
    }
)


st.balloons()
col1, col2, col3 = st.columns((2,4,4))
with col1:
    st.image(Image.open('logo.png'), width=250)
with col2:
    st.subheader(' ')
    st.header('Home AI search')
    st.subheader('Your choice, your comfort')

with st.form("first_form"):
    col1, col2, col3 = st.columns((1,1,1))
    with col1:
        quan = st.multiselect(
                'Qu·∫≠n',
                ('Select All','1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', 
                'T√¢n B√¨nh', 'B√¨nh T√¢n', 'T√¢n Ph√∫', 'B√¨nh Th·∫°nh', 'G√≤ V·∫•p', 'Ph√∫ Nhu·∫≠n',
                'H√≥c M√¥n', 'B√¨nh Ch√°nh', 'Nh√† B√®', 'C·ªß Chi'))
        
        
        
    with col2:
        bottom_money = st.selectbox('Gi√° th·∫•p nh·∫•t (tri·ªáu vnd)', ('Gi√° th·∫•p nh·∫•t',20,40,60,80,100))
        if bottom_money == 'Gi√° th·∫•p nh·∫•t':
            bottom_money = 0 
    with col3:
        top_money = st.selectbox('Gi√° cao nh·∫•t (tri·ªáu vnd)', ('Gi√° cao nh·∫•t', 120, 140, 160, 180, 200))
        if top_money == 'Gi√° cao nh·∫•t':
            top_money = 200
    
    area = st.slider('Di·ªán t√≠ch (m¬≤)', 0, 500, (0, 500))
    
    col1, col2 = st.columns((1,1))
    with col1:
        sleep = st.selectbox('S·ªë ph√≤ng ng·ªß', (1,2,3,4,5))
    with col2:
        vs = st.selectbox('S·ªë ph√≤ng v·ªá sinh', (1,2,3))
    submitted = st.form_submit_button("Search")


if submitted:
    if not quan:
        st.warning("CH·ªåN QU·∫¨N")
    else:

        user = db.fetch_all_apartments()    
        if "Select All" in quan:
                quan = ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', 
                'T√¢n B√¨nh', 'B√¨nh T√¢n', 'T√¢n Ph√∫', 'B√¨nh Th·∫°nh', 'G√≤ V·∫•p', 'Ph√∫ Nhu·∫≠n',
                'H√≥c M√¥n', 'B√¨nh Ch√°nh', 'Nh√† B√®', 'C·ªß Chi')
        else:
            number = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']
            temp1, temp2 = [], []
            list(map(lambda x: temp1.append(x) if x not in number else temp2.append(x),quan))
            temp2 = np.array(temp2).astype(int)
            temp1.sort()
            temp2.sort()
            if len(temp1) != 0 and len(temp2) != 0:
                quan = np.concatenate((temp2,temp1))
            
        huyen = ['Nh√† B√®', 'C·ªß Chi','H√≥c M√¥n', 'B√¨nh Ch√°nh']
        distric_tab = st.tabs(list(map(lambda x: f"Qu·∫≠n {x}" if x not in huyen else f"Huy·ªán {x}",quan)))
        
        for i,tabs in zip(quan,distric_tab):
            dis = []
            for us in user:
                if (us['districts'] == i):
                    if(check1(us,'rates',[bottom_money, top_money])):
                        if(check1(us,'areas',area)):
                            if(check2(us,'wc',vs)):
                                if(check2(us,'bedrooms',sleep)):
                                    dis.append(us)
            with tabs:
                if i not in huyen:
                    st.header('Qu·∫≠n ' + i)
                else:
                    st.header('Huy·ªán  ' + i)
                if (len(dis)==0):
                    st.write("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu ph√π h·ª£p!")
                else:
                    for d in dis: 
                        width = 500
                        col1, col2 = st.columns((1,1))
                        with col1:
                            st.image(d['links'],width=width)
                        with col2:

                            st.subheader(d['key'])
                            st.info(d['addresses'] + ", Ph∆∞·ªùng " + d['wards'] + (", Qu·∫≠n " + d['districts'] if d['districts'] not in huyen else f", Huy·ªán {d['districts']}")  + ', Tp.HCM', icon="üè¢")
                        
                            col1, col2, col3, col4 = st.columns((1.3,1,1,1.7))
                            with col1:
                                st.info(d['areas'] + ' m¬≤',icon='üõã')
                            with col2:
                                st.success(d['bedrooms'],icon='üõèÔ∏è')
                            with col3:
                                st.warning(d['wc'],icon='üõÅ')
                            with col4:
                                st.error(d['rates'] + " tri·ªáu/m¬≤",icon='üí≤')
                        
                            with st.expander('Nh·ªØng ti·ªán √≠ch xung quanh'):
                                col1, col2, col3, col4 = st.columns((3,1,3,1))
                                with col1:
                                    st.markdown('S·ªë tr∆∞·ªùng h·ªçc: ')
                                    st.write('- - - - - - - - - - - - - - - - - - ')
                                with col2:
                                    a=d['schools']
                                    st.write(a)
                                with col3:
                                    st.markdown('S·ªë tr·∫°m xe bus: ')
                                    st.write('- - - - - - - - - - - - - - - - - - ')
                                with col4:
                                    a=d['buses']
                                    st.write(a)
                                col1, col2, col3, col4 = st.columns((3,1,3,1))
                                with col1:
                                    st.markdown('S·ªë si√™u th·ªã: ')
                                    st.write('- - - - - - - - - - - - - - - - - - ')
                                with col2:
                                    a=d['markets']
                                    st.write(a)
                                with col3:
                                    st.markdown('S·ªë tr·∫°m nh√† h√†ng: ')
                                    st.write('- - - - - - - - - - - - - - - - - - ')
                                with col4:
                                    a=d['restaurants']
                                    st.write(a)
                                col1, col2, col3, col4 = st.columns((3,1,3,1))
                                with col1:
                                    st.markdown('S·ªë c√¢y ATM: ')
                                with col2:
                                    a=d['atm']
                                    st.write(a)
                                with col3:
                                    st.markdown('S·ªë c∆° s·ªü y t·∫ø: ')
                                with col4:
                                    a=d['hospitals']
                                    st.write(a) 
                        st.write('- - - - - - - - - - - - - - - - - - ')
                            
                    
        
            

url = 'https://youtu.be/'
url_= 'dQw4w9WgXcQ'

if st.button('_do not click_ **this**'):
    webbrowser.open_new_tab(url+url_)
    st.caption('i told ya')

